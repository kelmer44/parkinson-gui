<Window x:Class="WpfApplication1.windows.NewXP2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:expControl="clr-namespace:ExperienceMainControls;assembly=ExperienceMainControls"
    xmlns:CustomControlLibrary="clr-namespace:CustomControlLibrary;assembly=CustomControlLibrary"
    Title="Bienvenido al sistema de gestión de la Experiencia 2" 
    Height="800" Width="Auto" BorderThickness="0" SizeToContent="WidthAndHeight" 
    ResizeMode="NoResize" Icon="/Launcher;component/windows/imagenes/Xp2.ico" 
    WindowStartupLocation="CenterScreen" Padding="5" MaxHeight="Infinity" 
    HorizontalAlignment="Left" Closing="WindowClosing">
    <StackPanel Name="mainPanel">
        <expControl:MainControls Margin="10" DefaultFileExtension="xp2" HorizontalAlignment="Center" Name="flowControls" RandomCheckBoxActive="{Binding Path=Random, Mode=TwoWay}" ProtocolNumber="{Binding Path=CurrentProtocol, Mode=TwoWay}" ProtocolState="{Binding Path=Estado, Mode=OneWay}" StartClick="MainPanelStartClick" StopClick="MainPanelStopClick"  ResetClick="MainPanelResetClick"  CargarClick="MainPanelCargarClick"  GuardarClick="MainPanelGuardarClick"/>

        <StackPanel Orientation="Horizontal" Name="xpControlsPanel">

            <GroupBox Header="Configuración del protocolo" Height="Auto" Name="groupProtocolSpecific" Width="Auto" HorizontalAlignment="Stretch">
                <StackPanel Name="protocolBodyPanel">
                    <StackPanel Name="panelProtocolTitle" Orientation="Horizontal" ToolTip="Protocolo seleccionado (para alteración de valores).">
                        <Label Height="Auto" Name="labelProtocolLabel" Width="Auto" FontWeight="Bold" HorizontalAlignment="Center" >Protocolo:</Label>
                        <Label Height="Auto" Name="labelProtocolNumber" Width="Auto" FontWeight="Bold" HorizontalAlignment="Center" Content="{Binding Path=IndiceVisual}"></Label>
                    </StackPanel>
                    <!--<expControl:PerProtocolControls Name="perProtocolControls" IsActive="{Binding Path=IsActive, Mode=TwoWay}" Invertir="{Binding Path=Invertir, Mode=TwoWay}" EnNegro="{Binding Path=EnNegro, Mode=TwoWay}" CyclesToNextProtocol="/*{Binding Path=CyclesNextProtocol, Mode=TwoWay}*/" TimeNextProtocol="{Binding Path=TimeNextProtocol, Mode=TwoWay}" PriorityCycleClick="PerProtocolControlsPriorityCycleClick" PriorityTimeClick="PerProtocolControlsPriorityTimeClick" HorizontalAlignment="Center" />-->
                    <expControl:PerProtocolControls Name="perProtocolControls" IsActive="{Binding Path=IsActive, Mode=TwoWay}" Invertir="{Binding Path=Invertir, Mode=TwoWay}" EnNegro="{Binding Path=EnNegro, Mode=TwoWay}" CyclesToNextProtocol="{Binding Path=CyclesNextProtocol, Mode=TwoWay}" TimeNextProtocol="{Binding Path=TimeNextProtocol, Mode=TwoWay}" PriorityCycleClick="PerProtocolControlsPriorityCycleClick" PriorityTimeClick="PerProtocolControlsPriorityTimeClick" HorizontalAlignment="Center" />
                    <Separator Name="protocolSpecificSeparator"></Separator>
                    <StackPanel Name="protocolSpecificPanel" Orientation="Vertical">
                        <StackPanel Name="CicleSchemaPanel" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Grid Height="Auto" Name="gridCEP" Width="Auto" Margin="10,10" HorizontalAlignment="Center" ToolTip="Tiempo en segundos para proceder al siguiente protocolo en la secuencia, en caso de hallarse activo el tracking">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Label Name="labelCiclosEntrePulso" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Tiempo en segundos para proceder al siguiente protocolo en la secuencia, en caso de hallarse activo el tracking.">Ciclos entre cada pulso:</Label>
                                <Viewbox Grid.Column="2" Margin="10,0,0,0" ToolTip="Número de ciclos de emisión de sonido que deben transcurrir para que se emita un pulso de 5v.">
                                    <CustomControlLibrary:NumericUpDown x:Name="CyclesBwnPulse" Value="{Binding Path=CiclosEntrePulso, Mode=TwoWay}" Change="1" Maximum="20.0" Minimum="0.0" DecimalPlaces="0" Margin="0" Height="30" />
                                </Viewbox>
                            </Grid>
                            <StackPanel Margin="10,0,0,0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Border Margin="5,0" BorderThickness="1" HorizontalAlignment="Center" BorderBrush="DarkGray">
                                    <Image Name="EsquemaCiclo"  Height="Auto" Width="Auto" Source="/Launcher;component/imagenes/timeFlow.bmp" HorizontalAlignment="Center" />
                                </Border>
                                <Label Name="cicleSchema" HorizontalAlignment="Center" Padding="2">Esquema del ciclo
                                </Label>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Name="protocolSpecificPanel2" Orientation="Horizontal">
                                <GroupBox Header="Dianas" Height="Auto" Name="gbDianas" Width="Auto" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Top">

                                    <StackPanel Height="Auto" Name="spDianas" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <StackPanel  Height="Auto" Name="stackDistancia" Width="Auto" Orientation="Horizontal" HorizontalAlignment="Stretch">
                                            <Label Margin="10,5,5,5" Height="25" Name="labelAnimPerc" Width="Auto" Padding="0,5,5,5">Distancia:</Label>
                                            <Slider Margin="5,5,5,5"  Value="{Binding Path=DistanceBwnTargets, Mode=TwoWay}" Height="22" Name="sliderPercentage" Width="140" Maximum="100" TickPlacement="TopLeft" SmallChange="1" TickFrequency="1" ToolTip="Distancia inter-dianas en el espacio virtual" LargeChange="10" IsSnapToTickEnabled="True" IsSelectionRangeEnabled="False" Interval="1" />
                                        </StackPanel>

                                        <Grid  Height="Auto" Name="grid1" Width="Auto" Margin="10,10" HorizontalAlignment="Stretch" ToolTip="Tiempo de espera para mostrar la diana en pantalla.">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Label Name="labelTimeToTarget" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Tiempo de espera para mostrar la diana en pantalla.">Retardo de diana (1):</Label>
                                            <TextBox Grid.Column="2" Margin="58,0,0,0" ToolTip="Tiempo de espera para mostrar la diana en pantalla." Width="50">
                                                <TextBox.Text>
                                                    <Binding Path="TimeToShowTarget"  Mode="TwoWay" ValidatesOnDataErrors="False" ValidatesOnExceptions="False" UpdateSourceTrigger="PropertyChanged">
                                                        <Binding.ValidationRules>
                                                            <ExceptionValidationRule/>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                        
                                    </Grid>
                                    <CheckBox IsChecked="{Binding Path=ShouldLightenOnTouch}" Height="16" Name="enableIlumOnTocuh" Width="Auto" HorizontalAlignment="Left" Margin="5" ToolTip="Marcar para iluminar la diana al toque ignorando el tiempo inferior.">Iluminar al toque</CheckBox>
                                    <Grid  Height="Auto" Name="gridIluminaDiana" Width="Auto" Margin="10,10" HorizontalAlignment="Stretch" ToolTip="Tiempo de espera para iluminar la diana en pantalla.">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Label Name="labelTimeToLighten" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Tiempo de espera para iluminar la diana en pantalla.">Iluminación de diana (1.5):</Label>
                                        <TextBox Grid.Column="2" Margin="30,0,0,0" ToolTip="Tiempo de espera para iluminar la diana en pantalla." Width="50">
                                            <TextBox.Text>
                                                <Binding Path="TimeToLightenTarget"  Mode="TwoWay" ValidatesOnDataErrors="False" ValidatesOnExceptions="False" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>

                                    </Grid>
                                    <Grid  Height="Auto" Name="grid56" Width="Auto" Margin="10,10" HorizontalAlignment="Stretch" ToolTip="Tiempo total de duración del ciclo (1 + 2 + 3 + X).">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Label Name="labelExtraTime" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Tiempo total de duración del ciclo (1 + 2 + 3 + X).">Duración de ciclo (4):</Label>
                                            <TextBox Name="CicledurationTB"  Grid.Column="2" Margin="58,0,0,0" ToolTip="Tiempo total de duración del ciclo (1 + 2 + 3 + X)." Width="50" >
                                            <TextBox.Text>
                                                <Binding Path="ExtraWaitingTime" Mode="TwoWay" ValidatesOnDataErrors="False" ValidatesOnExceptions="False" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        </Grid>

                                        <RadioButton Height="16" Name="rbRandom" Width="Auto" Margin="10,10,10,5" HorizontalAlignment="Left" GroupName="targetState" ToolTip="Activa la iluminación de una u otra diana de forma aleatoria." Checked="RbRandomChecked" IsChecked="True">Iluminar aleatoriamente</RadioButton>
                                        <RadioButton Height="16" Name="rbRightPanel" Width="Auto" Margin="10,5" HorizontalAlignment="Left" GroupName="targetState" ToolTip="Ilumina repetidamente la diana derecha." Checked="RbRightPanelChecked">Iluminar panel derecho</RadioButton>
                                        <RadioButton Height="16" Name="rbLeftPanel" Width="Auto" Margin="10,5,10,10" HorizontalAlignment="Left" GroupName="targetState" ToolTip="Ilumina repetidamente la diana izquierda." Checked="RbLeftPanelChecked">Iluminar panel izquierdo</RadioButton>


                                    </StackPanel>

                                </GroupBox>
                            <GroupBox Header="Animaciones" Height="Auto" Name="gbAnims" Width="Auto" HorizontalAlignment="Center" Margin="5">
                                <StackPanel Height="Auto" Name="spAnims" Width="Auto" HorizontalAlignment="Stretch">
                                    <CheckBox IsChecked="{Binding Path=AutoAnim}" Height="16" Name="enableAnims" Width="Auto" HorizontalAlignment="Left" Margin="10" ToolTip="Activa el uso de animaciones, ignorando la información de captura.">Activar animaciones</CheckBox>
                                    <Label Height="28" Name="labelCurrentAnimation" Width="Auto" HorizontalAlignment="Left" Margin="10,0" IsEnabled="{Binding ElementName=enableAnims, Path=IsChecked}">Animación activa:</Label>
                                    <RadioButton Height="16" Name="animationRightStraight" Width="Auto" Margin="50,5" GroupName="currentAnimation" IsEnabled="{Binding ElementName=enableAnims, Path=IsChecked}" ToolTip="Activa el reaching del brazo derecho al frente." Checked="AnimationRightStraightChecked" IsChecked="True">Brazo derecho recto</RadioButton>
                                    <RadioButton Height="16" Name="animationRightOblique" Width="Auto" Margin="50,5" GroupName="currentAnimation" IsEnabled="{Binding ElementName=enableAnims, Path=IsChecked}" ToolTip="Activa el reaching del brazo derecho al lado opuesto." Checked="AnimationRightObliqueChecked">Brazo derecho oblicuo</RadioButton>
                                    <RadioButton Height="16" Name="animationLeftStraight" Width="Auto" Margin="50,5" GroupName="currentAnimation" IsEnabled="{Binding ElementName=enableAnims, Path=IsChecked}" ToolTip="Activa el reaching del brazo izquierdo al frente." Checked="AnimationLeftStraightChecked">Brazo izquierdo recto</RadioButton>
                                    <RadioButton Height="16" Name="animationLeftOblique" Width="Auto" Margin="50,5,10,20" GroupName="currentAnimation" IsEnabled="{Binding ElementName=enableAnims, Path=IsChecked}" ToolTip="Activa el reaching del brazo izquierdo al lado opuesto." Checked="AnimationLeftObliqueChecked">Brazo izquierdo oblicuo</RadioButton>
                                    <Grid  Height="Auto" Name="grid2" Width="Auto" Margin="10,0" HorizontalAlignment="Stretch" ToolTip="Tiempo de inicio de la animación.">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Label Name="label3" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Tiempo de inicio de la animación..">Inicio de animación (2):</Label>
                                        <!--<Viewbox Grid.Column="2" Margin="10,0,0,0" ToolTip="Determina la velocidad con la que se reproducen las animaciones.">
                                    <CustomControlLibrary:NumericUpDown x:Name="nudHandSpeed" Change="0.01" Maximum="600.0" Minimum="0.0" DecimalPlaces="2" Margin="0" Height="30" Value="{Binding Path=HandSpeed, Mode=TwoWay}" />
                                </Viewbox>-->
                                        <TextBox Grid.Column="2" Margin="60,0,0,0" ToolTip="Tiempo de inicio de la animación." Width="50">
                                            <TextBox.Text>
                                                <Binding Path="TimeToStartAnimation"  Mode="TwoWay" ValidatesOnDataErrors="False" ValidatesOnExceptions="False" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>

                                    <Grid  Height="Auto" Name="grid3" Width="Auto" Margin="10,0" HorizontalAlignment="Stretch" ToolTip="Tiempo de finalización de la animación.">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Label Name="label4" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Tiempo de finalización de la animación.">Fin de la animación (3):</Label>
                                        <TextBox Grid.Column="2" Margin="60,0,0,0" ToolTip="Tiempo de finalización de la animación." Width="50">
                                            <TextBox.Text>
                                                <Binding Path="TimeToEndAnimation"  Mode="TwoWay" ValidatesOnDataErrors="False" ValidatesOnExceptions="False" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                        <Grid Height="Auto" Name="gridCopyFrom" Width="Auto" Margin="10,10" HorizontalAlignment="Center" ToolTip="Copiar la configuración de otro protocolo en el actual">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label Margin="5" Name="labelCopyFrom" Grid.Column="1" VerticalAlignment="Center" Padding="0,5" ToolTip="Copiar la configuración de otro protocolo en el actual.">Copiar datos del protocolo:</Label>
                            <ComboBox Grid.Column="2" Name="copyFromCombo" MinWidth="100" VerticalAlignment="Center" ToolTip="Copiar la configuración de otro protocolo en el actual."></ComboBox>
                            <Button Margin="5" Name="copyfromButton" Grid.Column="3" ToolTip="Copiar la configuración de otro protocolo en el actual." Click="CopyfromButtonClick">
                                <StackPanel Orientation="Horizontal">
                                    <Image Margin="2,0" Source="imagenes/page_copy.png"></Image>
                                    <Label>Copiar</Label>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <expControl:TreeViewControl Name="tvProtocolosControl" Margin="10" HorizontalAlignment="Center" DisableAllClick="UcProtocolListDisableAllClick" EnableAllClick="UcProtocolListEnableAllClick" SelectProtocolClick="UcProtocolListSelectProtocolClick" RefreshClick="UcProtocolListRefreshClick" />
        </StackPanel>
        <TextBox Width="Auto" Height="0" Name="dbgBox" Visibility="Hidden"></TextBox>
        <Button Height="23" Name="botonSalir" Width="75" Click="BotonSalirClick" Margin="10">Salir</Button>
    </StackPanel>
</Window>
